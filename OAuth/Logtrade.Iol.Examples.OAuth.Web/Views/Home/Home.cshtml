@model HomeViewModel
@{
    ViewData["Title"] = "Home Page";
}
<form action="/connect" method="post">
    <h1>Creating a connection string</h1>
    <p>You can use the controls below to create example connection strings</p>
    <div class="form-group">
        <label>Scopes</label>
    </div>
    <div class="form-check">
        <input class="form-check-input" type="radio" name="Scope" id="Scope1" value="0" checked>
        <label class="form-check-label" for="Scope1">
            Standard scopes
        </label>
        <small class="form-text text-muted">As defined by application</small>
    </div>
    <div class="form-check">
        <input class="form-check-input" type="radio" name="Scope" value="1" id="Scope2">
        <label class="form-check-label" for="Scope2">
            Custom scope array
        </label>
        <small class="form-text text-muted">When you don't need to set any filters, this example will set <code>api.tradeunit.edit</code> and <code>api.transportinstruction.edit</code></small>
    </div>
    <div class="form-check">
        <input class="form-check-input" type="radio" name="Scope" value="2" id="Scope3">
        <label class="form-check-label" for="Scope3">
            Custom scope objects - 
        </label>
        <small class="form-text text-muted">When you need to set filters, this example will set <code>api.tradeunit.edit</code> with an access filter on CurrencyCode and an exclude filter on Quantity</small>
    </div>
    <div class="form-group">
        <label>Requesting party</label>
        <input class="form-control" name="RequestingParty" />
        <small class="form-text text-muted">If you're connecting two organizations, an iol account id</small>
    </div>
    <button type="submit" class="btn btn-primary">Create</button>
</form>
